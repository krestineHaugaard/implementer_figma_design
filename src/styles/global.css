@import "./reset.css" layer(reset);

@layer reset;

:root {
  /* primary colors' hue */
  --primary-color-hue-1: 43;
  --primary-color-hue-2: 120;
  --primary-color-hue-3: 0;

  --opasity: 0.85;

  /* primary color-1 */
  --primary-color-1-default: hsl(var(--primary-color-hue-1), 100%, 65%);
  --primary-color-1-light: hsl(var(--primary-color-hue-1), 100%, 87%);
  --primary-color-1-dark: hsl(var(--primary-color-hue-1), 74%, 51%);

  /* primary color-2 */
  --primary-color-2-default: hsl(var(--primary-color-hue-2), 38%, 50%);
  --primary-color-2-light: hsl(var(--primary-color-hue-2), 67%, 79%);

  /* primary color-3, gray scale, 05 and 1 = secondary colors */
  --primary-color-3-default: hsl(var(--primary-color-hue-3), 0%, 9%);

  --gray-scale-9: hsl(var(--primary-color-hue-3), 0%, 11%);
  --gray-scale-8: hsl(var(--primary-color-hue-3), 0%, 20%);
  --gray-scale-7: hsl(var(--primary-color-hue-3), 0%, 30%);
  --gray-scale-6: hsl(var(--primary-color-hue-3), 0%, 40%);
  --gray-scale-5: hsl(var(--primary-color-hue-3), 0%, 50%);
  --gray-scale-4: hsl(var(--primary-color-hue-3), 0%, 60%);
  --gray-scale-3: hsl(var(--primary-color-hue-3), 0%, 70%);
  --gray-scale-2: hsl(var(--primary-color-hue-3), 0%, 80%);
  --gray-scale-1: hsl(var(--primary-color-hue-3), 0%, 90%);
  --gray-scale-05: hsl(var(--primary-color-hue-3), 0%, 96%);

  /* transparent colors */

  --transparent-color: hsla(
    var(--primary-color-hue-3),
    0%,
    100%,
    var(--opasity)
  );

  /* type scale  @link https://utopia.fyi/type/calculator?c=320,14,1.2,1240,16,1.25,6,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

  --step--2: clamp(0.6076rem, 0.5964rem + 0.0563cqi, 0.64rem);
  --step--1: clamp(0.7292rem, 0.7045rem + 0.1232cqi, 0.8rem);
  --step-0: clamp(0.875rem, 0.8315rem + 0.2174cqi, 1rem);
  --step-1: clamp(1.05rem, 0.9804rem + 0.3478cqi, 1.25rem);
  --step-2: clamp(1.26rem, 1.1548rem + 0.5261cqi, 1.5625rem);
  --step-3: clamp(1.512rem, 1.3586rem + 0.7672cqi, 1.9531rem);
  --step-4: clamp(1.8144rem, 1.5963rem + 1.0904cqi, 2.4414rem);
  --step-5: clamp(2.1773rem, 1.8731rem + 1.5208cqi, 3.0518rem);
  --step-6: clamp(2.6127rem, 2.1947rem + 2.0904cqi, 3.8147rem);

  /* flow layout values  @link https://utopia.fyi/space/calculator?c=320,14,1.2,1240,16,1.25,6,2,&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l&g=s,l,xl,12 */

  --space-3xs: clamp(0.25rem, 0.25rem + 0cqi, 0.25rem);
  --space-2xs: clamp(0.4375rem, 0.4158rem + 0.1087cqi, 0.5rem);
  --space-xs: clamp(0.6875rem, 0.6658rem + 0.1087cqi, 0.75rem);
  --space-s: clamp(0.875rem, 0.8315rem + 0.2174cqi, 1rem);
  --space-m: clamp(1.3125rem, 1.2473rem + 0.3261cqi, 1.5rem);
  --space-l: clamp(1.75rem, 1.663rem + 0.4348cqi, 2rem);
  --space-xl: clamp(2.625rem, 2.4946rem + 0.6522cqi, 3rem);
  --space-2xl: clamp(3.5rem, 3.3261rem + 0.8696cqi, 4rem);
  --space-3xl: clamp(5.25rem, 4.9891rem + 1.3043cqi, 6rem);

  /* font weight */

  --font-regular: 400;
  --font-medium: 500;
  --font-semi-bold: 600;
  --font-bold: 700;
}

.content {
  --padding-inline: 1rem;
  --minimal-max-width: 40ch;
  --content-small-max-width: 5ch;
  --breakin-max-width: 15ch;
  --content-max-width: 10ch;
  --breakout-max-width: 15ch;

  --full-width-size: minmax(var(--padding-inline), 1fr);
  --breakout-size: minmax(0, var(--breakout-max-width));
  --content-size: minmax(0, var(--content-max-width));
  --breakin-size: minmax(0, var(--breakin-max-width));
  --content-small-size: minmax(0, var(--content-small-max-width));
  --minimal-size: min(
    100% - (var(--padding-inline) * 2),
    var(--minimal-max-width)
  );

  display: grid;
  grid-template-columns:
    [full-width-start] var(--full-width-size) [breakout-start] var(
      --breakout-size
    )
    [content-start] var(--content-size) [breakin-start] var(--breakin-size) [content-small-start] var(
      --content-small-size
    )
    [minimal-width-start] var(--minimal-size) [minimal-width-end]var(
      --content-small-size
    )
    [content-small-end]var(--breakin-size) [breakin-end]var(--content-size) [content-end] var(
      --breakout-size
    )
    [breakout-end] var(--full-width-size) [full-width-end];
  /* gap: clamp(1rem, , 3rem); */
}

.content > * {
  grid-column: content;
}

.content > .minimal-width {
  grid-column: minimal-width;
}

.content > .content-small {
  grid-column: content-small;
}

.content > .breakin {
  grid-column: breakin;
}

.content > .breakout {
  grid-column: breakout;
}

.content > .full-width {
  grid-column: full-width;
}

.flow > * + * {
  margin-top: var(--flow-space, 1rem);
}
